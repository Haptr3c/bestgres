//go:generate controller-gen object paths="."

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// BGClusterSpec defines the desired state of BGCluster
type BGClusterSpec struct {
	Version              string `json:"version"`
	Instances            int32  `json:"instances"`
	PersistentVolumeSize string `json:"persistentVolumeSize"`
	StorageClass         string `json:"storageClass"`
	SuperuserPassword    string `json:"superuserPassword"`
	ReplicationPassword  string `json:"replicationPassword"`
	PatroniImage         string `json:"patroniImage"`
}

// BGClusterStatus defines the observed state of BGCluster
type BGClusterStatus struct {
	Nodes []string `json:"nodes"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGClusterStatus) DeepCopyInto(out *BGClusterStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGClusterStatus.
func (in *BGClusterStatus) DeepCopy() *BGClusterStatus {
	if in == nil {
		return nil
	}
	out := new(BGClusterStatus)
	in.DeepCopyInto(out)
	return out
}

//+kubebuilder:object:root=true
//+kubebuilder:subresource:status

// BGCluster is the Schema for the bgclusters API
type BGCluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BGClusterSpec   `json:"spec,omitempty"`
	Status BGClusterStatus `json:"status,omitempty"`
}

//+kubebuilder:object:root=true

// BGClusterList contains a list of BGCluster
type BGClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BGCluster `json:"items"`
}

func init() {
	SchemeBuilder.Register(&BGCluster{}, &BGClusterList{})
}